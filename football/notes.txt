=================================
July 20, 2022
=================================
Feature idea:

Add a "seeding" function to the standingsFunctions. The idea would be to take the current standings as inputs, (includes, wins, losses, and total points) and compute the seeding based on league rules (specified as additional inputs)

That way this one function could handle all three of my leagues. The specific cases to handle are
- Family: Seeding is top 4 by record, with total points as tiebreaker between any 2 teams
- Johnson: Top 4 by record (with extraWL), then seeds 5 and 6 are by total points amongst the remaining teams. Most points is a tiebreaker within each subset
- Friends: Top 4 by record (with extraWL). ESPN sets the remaining seeds (most points? check league history)

So some features of this function should include the following things
* Specify number of primary seeds (non-wildcard) and wildcard seeds. e.g. in Johnson's league we have 6 seeds, 4 primary and 2 wildcard.
* Specify seeding rules for each category. So for primary, specify if seeding is by record vs most points. Specify tiebreaker rule for any two seeds (really just one option here, most points.) Do the same for wildcard.

=================================
July 19, 2022
=================================
Here is a list of the key types of files and their roles:

leagueInfo* files
- These contain static info about each league like ID, swid, etc
- Use these to save static data and import into analysis files to load league data

Files containing useful functions
- standingsFunctions.py contains functions to help process standings with extra w/L, pretty-printing
  standings, etc
- playoffOddsFunctions.py has functions that do randomization and help simulate a single season
  based on league and team data

standings_*.py
- Scripts that print standings and extra W/L for league with and without extra W/L
- Useful to run each week and share with league managers in extra W/L league

odds_*.py
- Scripts that compute the playoff odds for teams in a league
- Each is customized to seeding rules for the league
- Outcomes are saved in csv and pkl files

plot_playoff_odds.py
- This loads in a particular pkl file generated from odds_*.py
- Makes a stacked bar plot for a visual display of each team's seeding odds

historical_performance_*.py
- Scripts that gather historical performance of teams in the league
- Gets info about current as well as past teams
- Nice to share with friends
